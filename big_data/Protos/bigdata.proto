syntax = "proto3";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";


option csharp_namespace = "big_data.Proto";

package bigdata;


service BigDataSuckers {
  rpc ListCompanies (ListCompaniesRequest) returns (ListCompaniesResponse);
  rpc ListCompaniesByOffset (ListCompaniesByOffsetRequest) returns (ListCompaniesByOffsetResponse);
  rpc ListCompaniesWithCursor (ListCompaniesWithCursorRequest) returns (ListCompaniesWithCursorResponse);
  rpc DeleteCompany (DeleteCompanyRequest) returns (google.protobuf.Empty);
  rpc AddCompany (AddCompanyRequest) returns (Company);
  rpc UpdateCompany (UpdateCompanyRequest) returns (Company);
  rpc GetCompany (GetCompanyRequest) returns (Company);

  rpc GetCompanyContacts (GetCompanyContactsRequest) returns (GetCompanyContactsResponse);
  rpc AddContact (AddContactRequest) returns (Contact);
  rpc DeleteContact (DeleteContactRequest) returns (google.protobuf.Empty);
  rpc UpdateContact (UpdateContactRequest) returns (Contact);
}

// -- COMPANY --
// -- DELETE //

message DeleteCompanyRequest {
  int64 id = 1;
}

// -- ADD --
message AddCompanyRequest {
 optional string company_name = 2;
 optional string country = 3;
 optional string city = 4;
 optional string full_address = 5;
 optional string website = 6;
 optional string category_google = 7;
 optional double rating_google = 8;
 optional string rated_count = 9;
 optional string google_maps_url = 10;
 optional int32 big_fish_score = 11;
 repeated CompClassification Classification = 12; 
}

// -- UPDATE -- 

message UpdateCompanyRequest {
  Company company = 1;
  google.protobuf.FieldMask update_mask = 2;
}

// CONTACTS -=-----------

// -- DELETE --
message DeleteContactRequest {
  int64 contact_id = 1;
}

// #region UPDATE

message UpdateContactRequest {
  int64 id = 1;
  optional int64 company_id = 2;
  optional string value = 3;
  optional ContactType type = 4; // enum, scalar type, can be optional
  optional bool is_on_whatsapp = 6;
  optional string contacted_from_email = 7;
  optional bool checked = 8;
  google.protobuf.Timestamp date = 9; 
}



// #endregion

// --- Request & Response for ListCompanies ---

message ListCompaniesRequest {
  int32 page_size = 1;         // How many companies per page
  string cursor = 2;           // Cursor to fetch next page
}

message ListCompaniesResponse {
  repeated Company companies = 1; // List of companies
  string next_cursor = 2;         // Cursor for the next page, or empty if end
}

message GetCompanyRequest {
  int64 id = 1;
}
// --
message ListCompaniesByOffsetRequest {
  int32 pageIndex = 1;
  int32 pageSize = 2;
}

message ListCompaniesByOffsetResponse {
  repeated Company companies =  1;
  int32 totalCount = 2;
  int32 pageIndex = 3;
  int32 pageSize = 4;
}
// --
message ListCompaniesWithCursorRequest {
  optional int32 pageSize = 1;
  optional string cursor = 2; 
  optional string search = 3;
  optional string sortBy = 4;
  optional string sortDirection = 5;
}

message ListCompaniesWithCursorResponse {
  repeated Company companies = 1;
  optional string nextCursor = 2;  // checks if not set in gRPC client, returns null - means last page.
  int32 totalCount = 3;
}

// --- Company Model ---
// everything optional. string is scalar (primitive) in gRPC. Setter throws if null is assigned
// optional adds "hasCompanyName" property
message Company {
  int64 id = 1;
  optional string company_name = 2;
  optional string country = 3;
  optional string city = 4;
  optional string full_address = 5;
  optional string website = 6;
  optional string category_google = 7;
  optional double rating_google = 8;
  optional string rated_count = 9;
  optional string google_maps_url = 10;
  optional int32 big_fish_score = 11;
  repeated  CompClassification Classification = 12; // Enum. Repeated ~ Optional when empty array, don't need `real` optional
}

// --- Request & Response for GetCompanyContacts ---

message GetCompanyContactsRequest {
  int64 company_id = 1;
}

message GetCompanyContactsResponse {
  repeated Contact contacts = 1;
}

// --- Contact Model ---

message Contact {
  int64 id = 1;
  int64 company_id = 2;
  string value = 3;    // number, email address, id, etc
  ContactType type = 4; // enum

  optional bool is_on_whatsapp = 6;        // relevant only for `Phone number`
  optional string contacted_from_email = 7;       // relevant only for `email`
  optional bool checked = 8;  // has been handled, contacted or sth
  google.protobuf.Timestamp date = 9;     // last contact time
}

// --- Enum for Contact Types ---

enum ContactType {
  CONTACT_TYPE_UNSPECIFIED = 0;
  EMAIL = 1;
  PHONE = 2;
  FACEBOOK = 3;
  INSTAGRAM = 4;
  LINKEDIN = 5;
  OTHER = 6;
}


enum CompClassification {
  COMP_CLASSIFICATION_UNSPECIFIED = 0;
  GOOD_MATCH = 1;
  MAYBE = 2;
  ECOMMERCE = 4;
  GIMME_SOME_LOVE = 8;
}

message AddContactRequest {
  int64 company_id = 1;
  string value = 2;
  ContactType type = 3; // enum
  // optional bool is_on_whatsapp = 4;
  // optional string contacted_from_email = 5;
  // optional bool checked = 6;
  // google.protobuf.Timestamp date = 7;
}
